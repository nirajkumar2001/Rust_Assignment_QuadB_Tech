 Given a sorted array of integers, implement a function that returns the median of the array.4
 // if arr size is odd then kindly return the mid element if evenn the return the average of n/2, ((n/2)-1) element 
#include <iostream>
#include<bits/stdc++.h>
using namespace std;

double findMedian(std::vector<int>& arr) {
    int n = arr.size();
    if (n == 0) {
        return 0.0; // If array is empty, return 0.
    }
     if (n % 2 != 0) {
        // If number of elements is odd
        return static_cast<double>(arr[n / 2]);
    } else {
        // If number of elements is even
        return static_cast<double>(arr[n / 2 - 1] + arr[n / 2]) / 2.0;
    }
}

int main() {
    int n;
    cout << "Enter number of elements: ";
  cin >> n;
    
    vector<int> arr(n);
    cout << "Enter the elements of the array:" << endl;
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }
    
    // Sort the array if it's not guaranteed to be sorted
    sort(arr.begin(), arr.end());

    double median = findMedian(arr);
    cout << "The median of the array is: " << median << endl;

    return 0;
}
