Merge two sorted arrays in Rust
 // first we going to make a vector of size ( m+n) and the   compare via the  element in num1 and nums2 whichover is small we insert it in newly created array then
check the if one array end the second  rah jata hai the push the nums2 and vice verse and then copy the date of nums to nums1;


use std::io;
use std::io::BufRead;

// Function to merge two sorted arrays
fn MergeSortedArray(nums1: &mut Vec<i32>, m: usize, nums2: &[i32], n: usize) {
    let mut i = 0;
    let mut j = 0;
    let mut k = 0;
    let mut nums = vec![0; m + n]; // Create a new vector of size of (m+n) to store merged result

    while i < m && j < n {
        if nums1[i] <= nums2[j] {
            nums[k] = nums1[i];
            i += 1;
        } else {
            nums[k] = nums2[j];
            j += 1;
        }
        k += 1;
    }
// if any element is remaining after ending of  num2 so directly add all remaining element to num1 to nums1
    while i < m { 
        nums[k] = nums1[i];
        i += 1;
        k += 1;
    }
// if any element is remaining after ending of  num1 so directly add all remaining element to num2 to nums
    while j < n {
        nums[k] = nums2[j];
        j += 1;
        k += 1;
    }

    *nums1 = nums; //  Update the num1 with our newly created array nums in which our all merges integer is available
}

fn main() {
    // taking input for nums1
    let stdin = io::stdin();
    let mut input = stdin.lock().lines().map(|line| line.unwrap());

    let m: usize = input.next().unwrap().trim().parse().unwrap();
    let mut nums1: Vec<i32> = input.next().unwrap().split_whitespace()
                                        .map(|x| x.parse().unwrap())
                                        .collect();

    // taking input for num2
    let n: usize = input.next().unwrap().trim().parse().unwrap();
    let nums2: Vec<i32> = input.next().unwrap().split_whitespace()
                                        .map(|x| x.parse().unwrap())
                                        .collect();

    // Merge arrays via function MergeSortedArray
    MergeSortedArray(&mut nums1, m, &nums2, n);

    // Print the Reault via which was updated in nums1;+
    println!("Merged sorted array: {:?}", nums1);
}
